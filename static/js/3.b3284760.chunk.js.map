{"version":3,"sources":["Title.js","Buttons.js","CustomTooltip.js","Badge.js","QrCard.js","BadgeHoverQr.js","EmailContactForm.js","ContactSection.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_i18next__WEBPACK_IMPORTED_MODULE_1__","withNamespaces","props","t","i18nKey","lng","children","useEffect","document","title","concat","a","createElement","Fragment","styles","theme","root","fontSize","margin","text","classes","shiny","passThroughProps","oversized","Object","_home_lionel_projects_portfolio_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","assign","variant","color","className","map","el","withStyles","CtaButton","CancelButton","CustomTooltip","popperProps","container","querySelector","react_default","index_es","PopperProps","Badge","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasLinkRefFocus","activeElement","linkRef","current","state","active","setActive","bool","setState","handleActive","React","createRef","bind","assertThisInitialized","nextProps","deactivate","_this2","_this$props","data","shouldExpand","shouldManageDeactivate","shouldShowTooltip","objectWithoutProperties","willShowTooltip","href","url","ref","target","tabIndex","rel","onFocus","onBlur","style","objectSpread","outline","width","height","position","padding","onMouseEnter","onMouseLeave","iconRef","src_CustomTooltip","open","react_fontawesome_index_es","role","icon","split","Component","top","left","transform","spacing","unit","typography","managedActive","account","qr","elevation","marginTop","zIndex","hidden","component","icons_index_es","verticalAlign","dangerouslySetInnerHTML","__html","isMobile","detectMobileBrowser","BadgeHoverQr","id","uuidv4","qrSvg","handleDeactivate","QRCode","toString","then","res","_this3","_this$state","passThroughData","display","src_Badge","cursor","aria-owns","aria-haspopup","src_QrCard","PREFIX","EmailContactForm","initState","email","getContactFormInfo","subject","body","clearSubjectAndBodyFromLocalStorage","forEach","key","window","localStorage","removeItem","clearContactFormInfo","keys","slice","length","val","defineProperty","keyWithPrefix","setItem","action","method","required","name","label","type","autoComplete","fullWidth","value","onChange","e","setContactFormInfo","currentTarget","multiline","rows","Buttons","onClick","Title","justifyContent","src_BadgeHoverQr","src_EmailContactForm"],"mappings":"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","file":"static/js/3.b3284760.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { withNamespaces } from 'react-i18next';\n\nconst Title = props => {\n  const { t, i18nKey, lng, children } = props;\n\n  useEffect(() => {\n    document.title = `${t('ui.title')}${t('global.titleDelimiter')}${t(i18nKey)}`;\n  }, [ lng, i18nKey ]);\n\n  return <React.Fragment children={children} />;\n}\n\nexport default withNamespaces('translations')(Title);\n","import React from 'react';\nimport { withStyles, Button } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    fontSize: '1em',\n    margin: '20px 10px'\n  }\n});\n\nconst [ CtaButton, CancelButton ] = [\n\n  props => { // CtaButton\n\n    const { text, classes, shiny, oversized, ...passThroughProps } = props;\n\n    console.log()\n\n    return (\n      <Button variant='contained' color='secondary' className={classes.root + (shiny ? ' shinyButton' : '')} {...passThroughProps}>\n        {text}\n      </Button>\n    );\n  },\n\n  props => { // CancelButton\n\n    const { text, classes, ...passThroughProps } = props;\n\n    return (\n      <Button className={classes.root} {...passThroughProps}>\n        {text}\n      </Button>\n    );\n  }\n\n].map(el => withStyles(styles)(el));\n\nexport {\n  CtaButton,\n  CancelButton\n};\n","import React from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nconst CustomTooltip = props => {\n\n  const popperProps = {\n    container: document.querySelector('#customScrollbars')\n    // forces the tooltip placement to display correctly (resolves issue with\n    // custom scrollbars affecting position ot tooltip).\n    // note that this `querySelector` resolves to `null` on platforms where custom\n    // scrollbars aren't used, hence has no effect\n  };\n\n  return (\n    <Tooltip PopperProps={popperProps} {...props} />\n  );\n\n}\n\nexport default CustomTooltip;\n","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport CustomTooltip from './CustomTooltip';\n\nclass Badge extends Component {\n\n  constructor(props) {\n    super(props);\n    this.linkRef = React.createRef();\n    this.hasLinkRefFocus = this.hasLinkRefFocus.bind(this);\n  }\n\n  hasLinkRefFocus = () => document.activeElement === this.linkRef.current;\n\n  state = {\n    active: false\n  };\n\n  setActive = bool => {\n    this.setState({active: bool});\n    if (this.props.handleActive) this.props.handleActive(bool);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.state.deactivate && nextProps.deactivate) {\n      this.setActive(false);\n    }\n  }\n\n  render() {\n    const { data, shouldExpand, handleActive, shouldManageDeactivate, deactivate, shouldShowTooltip, styles, ...passThroughProps } = this.props;\n\n    const willShowTooltip = shouldShowTooltip !== false;\n\n    const { active } = this.state;\n\n    // const { active } = this.state;\n\n    return (\n\n      <a\n        href={data.url}\n        ref={this.linkRef}\n        target='_blank'\n        tabIndex={0}\n        rel='noopener noreferrer'\n        onFocus={() => this.setActive(true)}\n        onBlur={() => !shouldManageDeactivate && this.setActive(false)}\n        style={{\n          outline: 'none',\n          ...(styles && styles.a)\n        }}\n      >\n        <div\n          className='badge'\n          style={{\n            width: shouldExpand ? null : '1.5em',\n            height: shouldExpand ? null : '1.5em',\n            position: 'relative',\n            padding: shouldExpand ? 30 : 0\n          }}\n          onMouseEnter={() => this.setActive(true)}\n          onMouseLeave={() => {\n            if (!this.hasLinkRefFocus() && !shouldManageDeactivate) {\n              this.setActive(false);\n            }\n          }}\n          ref={this.props.iconRef || null}\n\n        >\n          <CustomTooltip\n            title={\n              willShowTooltip ? data.title : ''\n              /* empty string suppresses tooltip, whereas `null` or `undefined` don't */\n            }\n            open={willShowTooltip && active}\n          >\n            <FontAwesomeIcon\n              role='button'\n              className='badge-inner'\n              icon={data.icon.split(' ')}\n              style={active\n                ? {\n                  color: data.color,\n                  fontSize: shouldExpand && '1.5em',\n                  outline: 'none'\n                }\n                : {\n                  outline: 'none'\n                }\n              }\n              {...passThroughProps}\n            />\n\n          </CustomTooltip>\n          <span className='sr-only'>{data.title}</span> {/* also `grep`able! */}\n        </div>\n      </a>\n    );\n  }\n}\n\nexport default Badge;\n","import React from 'react';\n\nimport { withStyles, Card, Typography } from '@material-ui/core';\n\nimport { AccountCircle } from '@material-ui/icons';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: '75%',\n    width: 120,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: theme.spacing.unit * 2\n  },\n  typography: {\n    // margin: theme.spacing.unit * 2,\n  },\n});\n\nconst QrCard = props => {\n\n  const { classes, open, managedActive, title, account, qr, ...passThroughProps } = props;\n\n  return (\n    <Card\n      className={classes.root}\n      elevation={16}\n      style={{\n        marginTop: '1rem',\n        zIndex: 1000\n      }}\n      hidden={!open}\n      {...passThroughProps}\n    >\n      <Typography variant=\"h5\" component=\"h2\" className={classes.typography}>\n        {title}\n      </Typography>\n\n      <Typography variant=\"body1\" component=\"p\">\n        <AccountCircle\n          style={{\n            verticalAlign: 'text-bottom',\n            fontSize: '1.2em',\n            color: '#888'\n          }}\n\n        />\n        {' '}\n        {account}\n      </Typography>\n\n      <div\n        dangerouslySetInnerHTML={{__html: qr}}\n      />\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(QrCard);\n","import React from 'react';\n\nimport Badge from './Badge';\nimport QrCard from './QrCard';\n\nimport QRCode from 'qrcode';\nimport uuidv4 from 'uuid/v4';\n\nimport detectMobileBrowser from './detectMobileBrowser';\n\nconst isMobile = detectMobileBrowser();\n\nclass BadgeHoverQr extends React.Component {\n\n  state = {\n    open: false,\n    id: `qr-${uuidv4()}`,\n    qrSvg: '',\n    deactivate: false\n  };\n\n  componentDidMount() {\n    QRCode.toString(this.props.data.qr).then(res => this.setState({ qrSvg: res }));\n  }\n\n  handleDeactivate = () => {\n    this.setState({deactivate: true}, () => {\n      this.setState({deactivate: false});\n    });\n  }\n\n  render() {\n\n    const { data, passThroughProps } = this.props;\n    const { open, id, qrSvg } = this.state;\n\n    const { qr, account, ...passThroughData } = data;\n    const title = data.title; //still pass through\n\n    return (\n      <div\n        style={{ display: 'inline-block', position: 'relative' }}\n        onMouseLeave={this.handleDeactivate}\n        onBlur={() => !isMobile && this.handleDeactivate()}\n      >\n        <Badge\n          styles={{\n            a: {\n              cursor: 'pointer'\n            }\n          }}\n          data={passThroughData}\n          shouldShowTooltip={false}\n          aria-owns={open ? id : null}\n          aria-haspopup={true}\n          handleActive={bool => this.setState({ open: bool })}\n          shouldManageDeactivate={true}\n          deactivate={this.state.deactivate}\n          {...passThroughProps}\n        />\n\n        <QrCard\n          qr={qrSvg}\n          {...{title, open, id, account}}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default BadgeHoverQr;\n","import React from 'react';\n\nimport { withNamespaces } from 'react-i18next';\nimport { TextField } from '@material-ui/core';\n\nimport { CtaButton, CancelButton } from './Buttons';\n\nconst PREFIX = 'contactForm';\n\nclass EmailContactForm extends React.Component {\n\n  initState = () => ({\n    email: this.getContactFormInfo('email'),\n    subject: this.getContactFormInfo('subject'),\n    body: this.getContactFormInfo('body')\n  });\n\n  state = this.initState();\n\n  setContactFormInfo(key, val) {\n\n    this.setState({ [key]: val });\n\n    const keyWithPrefix = `${PREFIX}.${key}`;\n\n    if (!val) {\n      window.localStorage.removeItem(keyWithPrefix);\n    } else {\n      window.localStorage.setItem(keyWithPrefix, val);\n    }\n  }\n\n  getContactFormInfo(key) {\n    return window.localStorage[`${PREFIX}.${key}`] || '';\n  }\n\n  clearSubjectAndBodyFromLocalStorage = () => {\n    ['subject', 'body'].forEach(key => {\n      window.localStorage.removeItem(`${PREFIX}.${key}`);\n    });\n  };\n\n  clearContactFormInfo = () => {\n    Object.keys(window.localStorage).forEach(key => {\n      if (key.slice(0, PREFIX.length + 1) === `${PREFIX}.`) {\n        window.localStorage.removeItem(key);\n      }\n    });\n\n    this.setState(this.initState());\n  };\n\n  render() {\n\n    const { t } = this.props;\n\n    return (\n      <form action='https://formspree.io/portfolio@qiangzhongyizhuan.33mail.com' method='POST' id='emailForm'>\n\n        <TextField\n          required\n          id='email'\n          name='_replyto'\n          label={t('ui.email.yourEmail')}\n          type='email'\n          autoComplete='email'\n          fullWidth\n          margin='normal'\n          value={this.state.email}\n          onChange={e => this.setContactFormInfo('email', e.currentTarget.value)}\n        />\n\n        <TextField\n          id='subject'\n          name='subject'\n          label={t('ui.email.subject')}\n          fullWidth\n          margin='normal'\n          value={this.state.subject}\n          onChange={e => this.setContactFormInfo('subject', e.currentTarget.value)}\n        />\n\n        <TextField\n          required\n          id='body'\n          name='body'\n          label={t('ui.email.body')}\n          multiline\n          rows='8'\n          fullWidth\n          margin='normal'\n          variant='filled'\n          value={this.state.body}\n          onChange={e => this.setContactFormInfo('body', e.currentTarget.value)}\n        />\n\n        <CtaButton\n          text={t('ui.email.send')}\n          type='submit'\n          onClick={this.clearSubjectAndBodyFromLocalStorage} // followed by default, i.e. `POST` form\n        />\n\n        <CancelButton\n          text={t('ui.email.reset')}\n          type='reset'\n          onClick={this.clearContactFormInfo}\n        />\n\n      </form>\n    );\n  }\n}\n\nexport default withNamespaces('translations')(EmailContactForm)\n","import React from 'react';\n\nimport { withNamespaces } from 'react-i18next';\n\nimport { Typography } from '@material-ui/core';\n\nimport Title from './Title';\nimport Badge from './Badge';\nimport BadgeHoverQr from './BadgeHoverQr';\nimport EmailContactForm from './EmailContactForm';\n\nconst ContactSection = props => {\n\n  const { t } = props;\n\n  return (\n    <Title i18nKey='ui.contact'>\n      <section>\n        <Typography variant='h1'>{t('ui.contact')}</Typography>\n\n        <div style={{\n          margin: '0 auto',\n          display: 'flex',\n          justifyContent: 'space-around'\n        }}>\n          <Badge data={{\n            icon: 'fab github',\n            title: t('ui.github'),\n            url: t('contactInfo.github'),\n            color: '#302f2f'\n          }} />\n          <BadgeHoverQr data={{\n            icon: 'fab weixin',\n            title: t('ui.weixin'),\n            qr: t('contactInfo.weixin.qr'),\n            account: t('contactInfo.weixin.account'),\n            color: '#00d00d',\n          }} />\n          <Badge data={{\n            icon: 'fab linkedin',\n            title: t('ui.linkedin'),\n            url: t('contactInfo.linkedin'),\n            color: '#0273b2'\n          }} />\n        </div>\n\n        <EmailContactForm />\n      </section>\n    </Title>\n  );\n}\n\nexport default withNamespaces('translations')(ContactSection);\n"],"sourceRoot":""}